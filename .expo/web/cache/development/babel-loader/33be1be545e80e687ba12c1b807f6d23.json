{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Login from \"./screens/Login\";\nimport Register from \"./screens/Register\";\nimport Home from \"./screens/Home\";\nimport Navbar from \"./screens/nav/Navbar\";\nimport { ScreenStackHeaderConfig } from \"react-native-screens\";\nimport { AuthContext } from \"./components/context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AppLoading from \"expo-app-loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction MyStack(_ref) {\n  var userToken = _ref.userToken;\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#339933\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      options: {\n        title: \"Login\",\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: Register,\n      options: {\n        title: \"Register\"\n      }\n    })]\n  });\n}\n\nfunction App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userId = _useState2[0],\n      setUserId = _useState2[1];\n\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(preState, action) {\n    switch (action.type) {\n      case \"RETRIVE_TOKEN\":\n        return _objectSpread(_objectSpread({}, preState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case \"LOGIN\":\n        return _objectSpread(_objectSpread({}, preState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case \"LOGOUT\":\n        return _objectSpread(_objectSpread({}, preState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case \"REGISTER\":\n        return _objectSpread(_objectSpread({}, preState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn(userName, inputUserName, passWord, inputPassWord, id) {\n        var userToken;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"username = \" + userName + \"/\" + inputUserName);\n                console.log(\"password = \" + passWord + \"/\" + inputPassWord);\n                userToken = null;\n\n                if (!(userName == inputUserName && passWord == inputPassWord)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.prev = 4;\n                userToken = String(id);\n                console.log(\"login\");\n                _context.next = 9;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userToken\", userToken));\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](4);\n                console.log(_context.t0);\n\n              case 14:\n                dispatch({\n                  type: \"LOGIN\",\n                  id: userName,\n                  token: userToken\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[4, 11]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"userToken\"));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: \"LOGOUT\"\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {},\n      setUserID: function setUserID(input) {\n        setUserId(input);\n      }\n    };\n  });\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userToken = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n            case 4:\n              userToken = _context3.sent;\n              setUserId(userToken);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 11:\n              dispatch({\n                type: \"RETRIVE_TOKEN\",\n                token: userToken\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    }, 500);\n  }, []);\n\n  if (loginState.isLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#00ff00\"\n      })\n    });\n  }\n\n  console.log(\"userToken = \" + loginState.userToken);\n  return _jsx(AuthContext.Provider, {\n    value: authContext,\n    children: loginState.userToken != null ? _jsx(Navbar, {\n      userId: userId\n    }) : _jsx(NavigationContainer, {\n      children: _jsx(MyStack, {})\n    })\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ANUCHA/Desktop/api-cm-vjtb/app-cm-vgtb/vgtb-app/App.js"],"names":["React","useEffect","useState","useMemo","NavigationContainer","createNativeStackNavigator","Login","Register","Home","Navbar","ScreenStackHeaderConfig","AuthContext","AsyncStorage","AppLoading","Stack","MyStack","userToken","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","title","headerShown","App","userId","setUserId","initialLoginState","isLoading","userName","loginReducer","preState","action","type","token","id","useReducer","loginState","dispatch","authContext","signIn","inputUserName","passWord","inputPassWord","console","log","String","setItem","signOut","removeItem","signUp","setUserID","input","setTimeout","getItem","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["// In App.js in a new project\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { View, Text, StyleSheet, ActivityIndicator } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nimport Login from \"./screens/Login\";\nimport Register from \"./screens/Register\";\nimport Home from \"./screens/Home\";\nimport Navbar from \"./screens/nav/Navbar\";\nimport { ScreenStackHeaderConfig } from \"react-native-screens\";\nimport { AuthContext } from \"./components/context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport AppLoading from \"expo-app-loading\";\n\nconst Stack = createNativeStackNavigator();\n\nfunction MyStack({ userToken }) {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Login\"\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: \"#339933\",\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n    >\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n        options={{ title: \"Login\", headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Register\"\n        component={Register}\n        options={{ title: \"Register\" }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction App() {\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [userToken, setUserToken] = useState(null);\n  const [userId, setUserId] = useState(\"\");\n\n  const initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null,\n  };\n\n  const loginReducer = (preState, action) => {\n    switch (action.type) {\n      case \"RETRIVE_TOKEN\":\n        return {\n          ...preState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case \"LOGIN\":\n        return {\n          ...preState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case \"LOGOUT\":\n        return {\n          ...preState,\n          userName: null,\n          userToken: null,\n          isLoading: false,\n        };\n      case \"REGISTER\":\n        return {\n          ...preState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = React.useReducer(\n    loginReducer,\n    initialLoginState\n  );\n\n  const authContext = useMemo(() => ({\n    signIn: async (userName, inputUserName, passWord, inputPassWord, id) => {\n      console.log(\"username = \" + userName + \"/\" + inputUserName);\n      console.log(\"password = \" + passWord + \"/\" + inputPassWord);\n      // setUserToken(\"fgkj\");\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      if (userName == inputUserName && passWord == inputPassWord) {\n        try {\n          userToken = String(id);\n          console.log(\"login\");\n          await AsyncStorage.setItem(\"userToken\", userToken);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      dispatch({ type: \"LOGIN\", id: userName, token: userToken });\n    },\n    signOut: async () => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem(\"userToken\");\n      } catch (e) {\n        console.log(e);\n      }\n      dispatch({ type: \"LOGOUT\" });\n    },\n    signUp: () => {\n      // setUserToken(\"fgkj\");\n      // setIsLoading(false);\n    },\n    setUserID: (input) => {\n      setUserId(input);\n    },\n  }));\n\n  useEffect(() => {\n    setTimeout(async () => {\n      let userToken;\n      userToken = null;\n      try {\n        userToken = await AsyncStorage.getItem(\"userToken\");\n        setUserId(userToken);\n        // console.log(\"userToken\" + userToken);\n      } catch (e) {\n        console.log(e);\n      }\n      // setIsLoading(false);\n      dispatch({ type: \"RETRIVE_TOKEN\", token: userToken });\n    }, 500);\n  }, []);\n\n  if (loginState.isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ActivityIndicator size=\"large\" color=\"#00ff00\" />\n      </View>\n    );\n  }\n  console.log(\"userToken = \" + loginState.userToken);\n  return (\n    <AuthContext.Provider value={authContext}>\n      {loginState.userToken != null ? (\n        <Navbar userId={userId} />\n      ) : (\n        <NavigationContainer>\n          <MyStack />\n        </NavigationContainer>\n      )}\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}