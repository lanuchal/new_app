{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"../Home\";\nimport Order from \"../Order\";\nimport Profile from \"../profiles/Profile\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Hproduct from \"../Product/Hproduct\";\nimport OrderPage from \"../order/OrderPage\";\nimport Notification from \"../order/Notifications\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nfunction randomIntFromInterval() {\n  return Math.floor(Math.random() * (100000000 - 1 + 1) + 1);\n}\n\nvar nn;\n\nfunction MyTabs(_ref) {\n  var userid = _ref.userid,\n      rnd = _ref.rnd;\n  useEffect(function () {\n    console.log(\"userid => \" + userid);\n  }, []);\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarActiveTintColor: \"#339933\"\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: Home,\n      initialParams: {\n        itemId: userid\n      },\n      options: {\n        tabBarLabel: \"Home\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          return _jsx(Icon, {\n            name: \"home\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Hproduct\",\n      component: Hproduct,\n      initialParams: {\n        itemId: userid\n      },\n      options: {\n        tabBarLabel: \"Type\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n              size = _ref3.size;\n          return _jsx(Icon, {\n            name: \"tasks\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Order\",\n      component: Order,\n      initialParams: {\n        itemId: userid\n      },\n      options: {\n        tabBarLabel: \"shopping\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n              size = _ref4.size;\n          return _jsx(Icon, {\n            name: \"shopping-cart\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Notification\",\n      component: Notification,\n      initialParams: {\n        itemId: userid\n      },\n      options: {\n        tabBarLabel: \"Order\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color,\n              size = _ref5.size;\n          return _jsx(Icon, {\n            name: \"inbox\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      initialParams: {\n        itemId: userid\n      },\n      options: {\n        tabBarLabel: \"Profile\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color,\n              size = _ref6.size;\n          return _jsx(Icon, {\n            name: \"user\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\n\nexport default function Navbar(_ref7) {\n  var route = _ref7.route,\n      navigation = _ref7.navigation,\n      userId = _ref7.userId;\n  var rnd = randomIntFromInterval();\n  console.log(rnd);\n  return _jsx(NavigationContainer, {\n    independent: true,\n    children: _jsx(MyTabs, {\n      userid: userId,\n      rnd: rnd\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/ANUCHA/Desktop/api-cm-vjtb/app-cm-vgtb/vgtb-app/screens/nav/Navbar.js"],"names":["React","useEffect","NavigationContainer","createBottomTabNavigator","Home","Order","Profile","Icon","Hproduct","OrderPage","Notification","Tab","randomIntFromInterval","Math","floor","random","nn","MyTabs","userid","rnd","console","log","tabBarActiveTintColor","itemId","tabBarLabel","headerShown","tabBarIcon","color","size","Navbar","route","navigation","userId"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Home from \"../Home\";\r\nimport Order from \"../Order\";\r\nimport Profile from \"../profiles/Profile\";\r\n// import Type from \"../Product/Type\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport Hproduct from \"../Product/Hproduct\";\r\nimport OrderPage from \"../order/OrderPage\";\r\nimport Notification from \"../order/Notifications\";\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction randomIntFromInterval() {\r\n  return Math.floor(Math.random() * (100000000 - 1 + 1) + 1);\r\n}\r\nvar nn;\r\nfunction MyTabs({ userid, rnd }) {\r\n  useEffect(() => {\r\n    console.log(\"userid => \" + userid);\r\n  }, []);\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: \"#339933\",\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        // component={() => {\r\n        //   // nn = randomIntFromInterval();\r\n        //   return <Home userId={userid} />;\r\n        // }}\r\n        component={Home}\r\n        initialParams={{ itemId: userid }}\r\n        options={{\r\n          tabBarLabel: \"Home\",\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"home\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Hproduct\"\r\n        component={Hproduct}\r\n        initialParams={{ itemId: userid }}\r\n        options={{\r\n          tabBarLabel: \"Type\",\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"tasks\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Order\"\r\n        component={Order}\r\n        initialParams={{ itemId: userid }}\r\n        options={{\r\n          tabBarLabel: \"shopping\",\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"shopping-cart\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Notification\"\r\n        component={Notification}\r\n        initialParams={{ itemId: userid }}\r\n        options={{\r\n          tabBarLabel: \"Order\",\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"inbox\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={Profile}\r\n        initialParams={{ itemId: userid }}\r\n        options={{\r\n          tabBarLabel: \"Profile\",\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"user\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default function Navbar({ route, navigation, userId }) {\r\n  const rnd = randomIntFromInterval();\r\n  // const { userId } = route.params;\r\n  // const data = JSON.stringify(route.params);\r\n  // const { navigation } = this.props;\r\n  console.log(rnd);\r\n  return (\r\n    <NavigationContainer independent={true}>\r\n      <MyTabs userid={userId} rnd={rnd} />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}