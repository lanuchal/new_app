{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImagePicker from \"react-native-image-crop-picker\";\nimport { api } from \"../../api\";\nimport { androidCameraPermission } from \"../../permissions\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar EditImgf = function EditImgf() {\n  var onSelectImage = function onSelectImage() {\n    var permissionStatus;\n    return _regeneratorRuntime.async(function onSelectImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(androidCameraPermission());\n\n          case 2:\n            permissionStatus = _context.sent;\n\n            if (permissionStatus || Platform.OS == \"ios\") {\n              Alert.alert(\"Profile Picture\", \"Choose an option\", [{\n                text: \"Camera\",\n                onPress: onCamera\n              }, {\n                text: \"Gallery\",\n                onPress: onGallery\n              }, {\n                text: \"Cancel\",\n                onPress: function onPress() {}\n              }]);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onCamera = function onCamera() {\n    ImagePicker.openCamera({\n      width: 300,\n      height: 400,\n      cropping: true\n    }).then(function (image) {\n      console.log(image);\n    });\n  };\n\n  var onGallery = function onGallery() {\n    ImagePicker.openPicker({\n      width: 300,\n      height: 400,\n      cropping: true\n    }).then(function (image) {\n      console.log(\"selected Image\", image);\n      imageUpload(image.path);\n    });\n  };\n\n  var imageUpload = function imageUpload(imagePath) {\n    var imageData;\n    return _regeneratorRuntime.async(function imageUpload$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            imageData = new FormData();\n            imageData.append(\"id\", 169);\n            imageData.append(\"profile1\", {\n              uri: imagePath,\n              name: \"image.png\",\n              fileName: \"image\",\n              type: \"image/png\"\n            });\n            console.log(\"form data\", imageData);\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(axios({\n              method: \"post\",\n              url: api + \"/upload1\",\n              data: imageData\n            }).then(function (response) {\n              console.log(\"image upload successfully\", response.data);\n            }).then(function (error) {\n              console.log(\"error riased\", error);\n            }));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(TouchableOpacity, {\n      style: styles.btnStyle,\n      activeOpacity: 0.8,\n      onPress: onSelectImage,\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \"select your image\"\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  btnStyle: {\n    backgroundColor: \"blue\",\n    height: 48,\n    borderRadius: 8,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    paddingHorizontal: 16\n  }\n});\nexport default EditImgf;","map":{"version":3,"sources":["C:/Users/ANUCHA/Desktop/api-cm-vjtb/app-cm-vgtb/vgtb-app/screens/profiles/EditImgf.js"],"names":["React","Component","useEffect","ImagePicker","api","androidCameraPermission","axios","EditImgf","onSelectImage","permissionStatus","Platform","OS","Alert","alert","text","onPress","onCamera","onGallery","openCamera","width","height","cropping","then","image","console","log","openPicker","imageUpload","path","imagePath","imageData","FormData","append","uri","name","fileName","type","method","url","data","response","error","styles","container","btnStyle","textStyle","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderRadius","color","fontWeight","paddingHorizontal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;;;;;;AASA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,GAAT;AACA,SAASC,uBAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACWH,uBAAuB,EADlC;;AAAA;AACdI,YAAAA,gBADc;;AAEpB,gBAAIA,gBAAgB,IAAIC,QAAQ,CAACC,EAAT,IAAe,KAAvC,EAA8C;AAC5CC,cAAAA,KAAK,CAACC,KAAN,CAAY,iBAAZ,EAA+B,kBAA/B,EAAmD,CACjD;AAAEC,gBAAAA,IAAI,EAAE,QAAR;AAAkBC,gBAAAA,OAAO,EAAEC;AAA3B,eADiD,EAEjD;AAAEF,gBAAAA,IAAI,EAAE,SAAR;AAAmBC,gBAAAA,OAAO,EAAEE;AAA5B,eAFiD,EAGjD;AAAEH,gBAAAA,IAAI,EAAE,QAAR;AAAkBC,gBAAAA,OAAO,EAAE,mBAAM,CAAE;AAAnC,eAHiD,CAAnD;AAKD;;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAWA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBb,IAAAA,WAAW,CAACe,UAAZ,CAAuB;AACrBC,MAAAA,KAAK,EAAE,GADc;AAErBC,MAAAA,MAAM,EAAE,GAFa;AAGrBC,MAAAA,QAAQ,EAAE;AAHW,KAAvB,EAIGC,IAJH,CAIQ,UAACC,KAAD,EAAW;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAND;AAOD,GARD;;AAUA,MAAMN,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBd,IAAAA,WAAW,CAACuB,UAAZ,CAAuB;AACrBP,MAAAA,KAAK,EAAE,GADc;AAErBC,MAAAA,MAAM,EAAE,GAFa;AAGrBC,MAAAA,QAAQ,EAAE;AAHW,KAAvB,EAIGC,IAJH,CAIQ,UAACC,KAAD,EAAW;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACAI,MAAAA,WAAW,CAACJ,KAAK,CAACK,IAAP,CAAX;AACD,KAPD;AAQD,GATD;;AAWA,MAAMD,WAAW,GAAG,SAAdA,WAAc,CAAOE,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,YAAAA,SADY,GACA,IAAIC,QAAJ,EADA;AAElBD,YAAAA,SAAS,CAACE,MAAV,CAAiB,IAAjB,EAAuB,GAAvB;AACAF,YAAAA,SAAS,CAACE,MAAV,CAAiB,UAAjB,EAA6B;AAC3BC,cAAAA,GAAG,EAAEJ,SADsB;AAE3BK,cAAAA,IAAI,EAAE,WAFqB;AAG3BC,cAAAA,QAAQ,EAAE,OAHiB;AAI3BC,cAAAA,IAAI,EAAE;AAJqB,aAA7B;AAMAZ,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,SAAzB;AATkB;AAAA,6CAWZxB,KAAK,CAAC;AACV+B,cAAAA,MAAM,EAAE,MADE;AAEVC,cAAAA,GAAG,EAAElC,GAAG,GAAG,UAFD;AAGVmC,cAAAA,IAAI,EAAET;AAHI,aAAD,CAAL,CAKHR,IALG,CAKE,UAAUkB,QAAV,EAAoB;AACxBhB,cAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCe,QAAQ,CAACD,IAAlD;AACD,aAPG,EAQHjB,IARG,CAQE,UAACmB,KAAD,EAAW;AACfjB,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BgB,KAA5B;AACD,aAVG,CAXY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAuBA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,gBAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,QADhB;AAEE,MAAA,aAAa,EAAE,GAFjB;AAGE,MAAA,OAAO,EAAEpC,aAHX;AAAA,gBAKE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEkC,MAAM,CAACG,SAApB;AAAA;AAAA;AALF;AADF,IADF;AAWD,CAnED;;AAsEA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BN,EAAAA,QAAQ,EAAE;AACRO,IAAAA,eAAe,EAAE,MADT;AAER/B,IAAAA,MAAM,EAAE,EAFA;AAGRgC,IAAAA,YAAY,EAAE,CAHN;AAIRF,IAAAA,UAAU,EAAE,QAJJ;AAKRD,IAAAA,cAAc,EAAE;AALR,GANqB;AAa/BJ,EAAAA,SAAS,EAAE;AACTQ,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,iBAAiB,EAAE;AAHV;AAboB,CAAlB,CAAf;AAoBA,eAAehD,QAAf","sourcesContent":["import React, { Component, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Platform,\r\n  Alert,\r\n} from \"react-native\";\r\nimport ImagePicker from \"react-native-image-crop-picker\";\r\nimport { api } from \"../../api\";\r\nimport { androidCameraPermission } from \"../../permissions\";\r\nimport axios from \"axios\";\r\n\r\nconst EditImgf = () => {\r\n  const onSelectImage = async () => {\r\n    const permissionStatus = await androidCameraPermission();\r\n    if (permissionStatus || Platform.OS == \"ios\") {\r\n      Alert.alert(\"Profile Picture\", \"Choose an option\", [\r\n        { text: \"Camera\", onPress: onCamera },\r\n        { text: \"Gallery\", onPress: onGallery },\r\n        { text: \"Cancel\", onPress: () => {} },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const onCamera = () => {\r\n    ImagePicker.openCamera({\r\n      width: 300,\r\n      height: 400,\r\n      cropping: true,\r\n    }).then((image) => {\r\n      console.log(image);\r\n    });\r\n  };\r\n\r\n  const onGallery = () => {\r\n    ImagePicker.openPicker({\r\n      width: 300,\r\n      height: 400,\r\n      cropping: true,\r\n    }).then((image) => {\r\n      console.log(\"selected Image\", image);\r\n      imageUpload(image.path);\r\n    });\r\n  };\r\n\r\n  const imageUpload = async (imagePath) => {\r\n    const imageData = new FormData();\r\n    imageData.append(\"id\", 169);\r\n    imageData.append(\"profile1\", {\r\n      uri: imagePath,\r\n      name: \"image.png\",\r\n      fileName: \"image\",\r\n      type: \"image/png\",\r\n    });\r\n    console.log(\"form data\", imageData);\r\n\r\n    await axios({\r\n      method: \"post\",\r\n      url: api + \"/upload1\",\r\n      data: imageData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"image upload successfully\", response.data);\r\n      })\r\n      .then((error) => {\r\n        console.log(\"error riased\", error);\r\n      });\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={styles.btnStyle}\r\n        activeOpacity={0.8}\r\n        onPress={onSelectImage}\r\n      >\r\n        <Text style={styles.textStyle}>select your image</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  btnStyle: {\r\n    backgroundColor: \"blue\",\r\n    height: 48,\r\n    borderRadius: 8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    paddingHorizontal: 16,\r\n  },\r\n});\r\n\r\nexport default EditImgf;\r\n// import React from \"react\";\r\n// import { Button, PermissionsAndroid, SafeAreaView, StatusBar, StyleSheet, Text, View } from \"react-native\";\r\n\r\n// const requestCameraPermission = async () => {\r\n//   try {\r\n//     const granted = await PermissionsAndroid.request(\r\n//       PermissionsAndroid.PERMISSIONS.CAMERA,\r\n//       {\r\n//         title: \"Cool Photo App Camera Permission\",\r\n//         message:\r\n//           \"Cool Photo App needs access to your camera \" +\r\n//           \"so you can take awesome pictures.\",\r\n//         buttonNeutral: \"Ask Me Later\",\r\n//         buttonNegative: \"Cancel\",\r\n//         buttonPositive: \"OK\"\r\n//       }\r\n//     );\r\n//     if (granted === PermissionsAndroid.RESULTS.GRANTED) {\r\n//       console.log(\"You can use the camera\");\r\n//     } else {\r\n//       console.log(\"Camera permission denied\");\r\n//     }\r\n//   } catch (err) {\r\n//     console.warn(err);\r\n//   }\r\n// };\r\n\r\n// const EditImgf = () => (\r\n//   <View style={styles.container}>\r\n//     <Text style={styles.item}>Try permissions</Text>\r\n//     <Button title=\"request permissions\" onPress={requestCameraPermission} />\r\n//   </View>\r\n// );\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: \"center\",\r\n//     paddingTop: StatusBar.currentHeight,\r\n//     backgroundColor: \"#ecf0f1\",\r\n//     padding: 8\r\n//   },\r\n//   item: {\r\n//     margin: 24,\r\n//     fontSize: 18,\r\n//     fontWeight: \"bold\",\r\n//     textAlign: \"center\"\r\n//   }\r\n// });\r\n\r\n// export default EditImgf;\r\n"]},"metadata":{},"sourceType":"module"}